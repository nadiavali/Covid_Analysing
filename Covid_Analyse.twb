<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Finall_CSV' inline='true' name='federated.1jiefrv06p6nv618hyfj91j6de3g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Finall_CSV' name='textscan.12lumt3048arwk1a8ygvv1dmxzpy'>
            <connection class='textscan' directory='/Users/NadiaIT/Code_IT/Covid_Analysis' filename='Finall_CSV.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12lumt3048arwk1a8ygvv1dmxzpy' name='Finall_CSV.csv' table='[Finall_CSV#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12lumt3048arwk1a8ygvv1dmxzpy' name='Finall_CSV.csv' table='[Finall_CSV#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[Finall_CSV.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Finall_CSV.csv' datatype='table' name='[__tableau_internal_object_id__].[Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='/var/folders/nw/g5ykmcxj1mb8k79flzmsrk7c0000gp/T/tableau-temp/#TableauTemp_1wdi9701mro48n166bdgd1dxbraq.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/28/2024 03:04:30 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Finall_CSV.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Finall_CSV.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Finall_CSV.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F4</remote-alias>
              <ordinal>3</ordinal>
              <family>Finall_CSV.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F5</remote-alias>
              <ordinal>4</ordinal>
              <family>Finall_CSV.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>Finall_CSV.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F7</remote-alias>
              <ordinal>6</ordinal>
              <family>Finall_CSV.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Finall_CSV.csv' id='Finall_CSV.csv_7AAA1C5F537C4434960C0C26CCEE320B'>
            <properties context=''>
              <relation connection='textscan.12lumt3048arwk1a8ygvv1dmxzpy' name='Finall_CSV.csv' table='[Finall_CSV#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                  <column datatype='string' name='F4' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='string' name='F6' ordinal='5' />
                  <column datatype='string' name='F7' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CSV_CORONA' inline='true' name='federated.02fhgjh0l4r35v0zv4o2b0rb9p7i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CSV_CORONA' name='textscan.13czs1r0lfn0e316xlxlz0lxfla1'>
            <connection class='textscan' directory='/Users/NadiaIT/Code_IT/Covid_Analysis' filename='CSV_CORONA.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13czs1r0lfn0e316xlxlz0lxfla1' name='CSV_CORONA.csv' table='[CSV_CORONA#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13czs1r0lfn0e316xlxlz0lxfla1' name='CSV_CORONA.csv' table='[CSV_CORONA#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[CSV_CORONA.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CSV_CORONA.csv' datatype='table' name='[__tableau_internal_object_id__].[CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='/var/folders/nw/g5ykmcxj1mb8k79flzmsrk7c0000gp/T/tableau-temp/#TableauTemp_09a6f2o0krg57012dnkn314j00bv.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/28/2024 03:05:45 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>CSV_CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>CSV_CORONA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>2</ordinal>
              <family>CSV_CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F4</remote-alias>
              <ordinal>3</ordinal>
              <family>CSV_CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F5</remote-alias>
              <ordinal>4</ordinal>
              <family>CSV_CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>CSV_CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F7</remote-alias>
              <ordinal>6</ordinal>
              <family>CSV_CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='sf_sunrise' type='palette'>
            <map to='#300561'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#762f3d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ce6716'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f59623'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f5c062'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f5de98'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CSV_CORONA.csv' id='CSV_CORONA.csv_1D8E907198324489ACFF342A0183D00C'>
            <properties context=''>
              <relation connection='textscan.13czs1r0lfn0e316xlxlz0lxfla1' name='CSV_CORONA.csv' table='[CSV_CORONA#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                  <column datatype='string' name='F3' ordinal='2' />
                  <column datatype='string' name='F4' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='string' name='F6' ordinal='5' />
                  <column datatype='string' name='F7' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CSV_3CORONA' inline='true' name='federated.117jsul1lr14oo1b0jsz60xz6d99' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CSV_3CORONA' name='textscan.031r6qk0u8i9x316zoafx02phtpv'>
            <connection class='textscan' directory='/Users/NadiaIT/Code_IT/Covid_Analysis' filename='CSV_3CORONA.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.031r6qk0u8i9x316zoafx02phtpv' name='CSV_3CORONA.csv' table='[CSV_3CORONA#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.031r6qk0u8i9x316zoafx02phtpv' name='CSV_3CORONA.csv' table='[CSV_3CORONA#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[CSV_3CORONA.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CSV_3CORONA.csv' datatype='table' name='[__tableau_internal_object_id__].[CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='/var/folders/nw/g5ykmcxj1mb8k79flzmsrk7c0000gp/T/tableau-temp/#TableauTemp_1u73jqh1ofg2it0zqjruh1a9x1bz.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/28/2024 03:17:31 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>CSV_3CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>CSV_3CORONA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>CSV_3CORONA.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>CSV_3CORONA.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F5</remote-alias>
              <ordinal>4</ordinal>
              <family>CSV_3CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>CSV_3CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F7</remote-alias>
              <ordinal>6</ordinal>
              <family>CSV_3CORONA.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CSV_3CORONA.csv' id='CSV_3CORONA.csv_834C3E9149A9434386E3135B70A60025'>
            <properties context=''>
              <relation connection='textscan.031r6qk0u8i9x316zoafx02phtpv' name='CSV_3CORONA.csv' table='[CSV_3CORONA#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='string' name='F6' ordinal='5' />
                  <column datatype='string' name='F7' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CSV_CORONA_date' inline='true' name='federated.07pwuvl146upwj0zl19eg07migyh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CSV_CORONA_date' name='textscan.1a01p3418d5gk811q3fig04mwg5z'>
            <connection class='textscan' directory='/Users/NadiaIT/Code_IT/Covid_Analysis' filename='CSV_CORONA_date.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1a01p3418d5gk811q3fig04mwg5z' name='CSV_CORONA_date.csv' table='[CSV_CORONA_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1a01p3418d5gk811q3fig04mwg5z' name='CSV_CORONA_date.csv' table='[CSV_CORONA_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[CSV_CORONA_date.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CSV_CORONA_date.csv' datatype='table' name='[__tableau_internal_object_id__].[CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='/var/folders/nw/g5ykmcxj1mb8k79flzmsrk7c0000gp/T/tableau-temp/#TableauTemp_0i0g4lf0lg6nnn140p6ss18bmef6.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/29/2024 12:19:53 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>CSV_CORONA_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>CSV_CORONA_date.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>CSV_CORONA_date.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>9050</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>CSV_CORONA_date.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52640</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>CSV_CORONA_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>59780</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>CSV_CORONA_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F7</remote-alias>
              <ordinal>6</ordinal>
              <family>CSV_CORONA_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CSV_CORONA_date.csv' id='CSV_CORONA_date.csv_91FA403BFD4E4AB085DEF2B428491483'>
            <properties context=''>
              <relation connection='textscan.1a01p3418d5gk811q3fig04mwg5z' name='CSV_CORONA_date.csv' table='[CSV_CORONA_date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                  <column datatype='string' name='F6' ordinal='5' />
                  <column datatype='string' name='F7' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Finall_CSV' name='federated.1jiefrv06p6nv618hyfj91j6de3g' />
          </datasources>
          <datasource-dependencies datasource='federated.1jiefrv06p6nv618hyfj91j6de3g'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jiefrv06p6nv618hyfj91j6de3g].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jiefrv06p6nv618hyfj91j6de3g].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jiefrv06p6nv618hyfj91j6de3g].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jiefrv06p6nv618hyfj91j6de3g].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jiefrv06p6nv618hyfj91j6de3g].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1jiefrv06p6nv618hyfj91j6de3g].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jiefrv06p6nv618hyfj91j6de3g].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jiefrv06p6nv618hyfj91j6de3g].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1jiefrv06p6nv618hyfj91j6de3g].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jiefrv06p6nv618hyfj91j6de3g].[:Measure Names]' value='173' />
            <format attr='height' value='38' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='center' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='auto' />
            <format attr='vertical-align' data-class='subtotal' scope='cols' value='auto' />
            <format attr='text-format' field='[federated.1jiefrv06p6nv618hyfj91j6de3g].[Multiple Values]' value='*' />
            <format attr='text-format' field='[federated.1jiefrv06p6nv618hyfj91j6de3g].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#f5ead7' />
            <format attr='background-color' data-class='subtotal' value='#dfedeb' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='center' />
            <format attr='vertical-align' scope='cols' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e9edf5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1jiefrv06p6nv618hyfj91j6de3g].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1jiefrv06p6nv618hyfj91j6de3g].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{233CCCF4-40D1-4C34-AAD8-3120D40135CF}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CSV_CORONA' name='federated.02fhgjh0l4r35v0zv4o2b0rb9p7i' />
          </datasources>
          <datasource-dependencies datasource='federated.02fhgjh0l4r35v0zv4o2b0rb9p7i'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='1000' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#f2f2f2' />
            <format attr='background-color' scope='cols' value='#ffffff' />
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='left' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#f2f2f2' />
            <format attr='background-color' data-class='total' value='#dfedeb' />
            <format attr='band-color' scope='rows' value='#efebe8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South America&quot;</value>
                <value>1357619</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Oceania&quot;</value>
                <value>33024</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Africa&quot;</value>
                <value>259121</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Asia&quot;</value>
                <value>1637335</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;North America&quot;</value>
                <value>1671512</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]</field>
                  <field>[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[sum:TotalDeathCount:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Europe&quot;</value>
                <value>2102377</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{1FC3619E-B746-4994-87CA-7F9C36832618}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CSV_3CORONA' name='federated.117jsul1lr14oo1b0jsz60xz6d99' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.117jsul1lr14oo1b0jsz60xz6d99'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.117jsul1lr14oo1b0jsz60xz6d99].[Longitude (generated)]' field-type='quantitative' max='53816395.454127014' min='13258458.468070798' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.117jsul1lr14oo1b0jsz60xz6d99].[Latitude (generated)]' field-type='quantitative' max='18456778.501449' min='-8386387.1526069408' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.117jsul1lr14oo1b0jsz60xz6d99].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.117jsul1lr14oo1b0jsz60xz6d99].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected per Country'>
              <formatted-text>
                <run>Percent Population Infected per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.117jsul1lr14oo1b0jsz60xz6d99].[none:Location:nk]' />
              <color column='[federated.117jsul1lr14oo1b0jsz60xz6d99].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.117jsul1lr14oo1b0jsz60xz6d99].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117jsul1lr14oo1b0jsz60xz6d99].[Latitude (generated)]</rows>
        <cols>[federated.117jsul1lr14oo1b0jsz60xz6d99].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D901235A-F347-4911-A612-6293C5E3DF97}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected and Forcast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CSV_CORONA_date' name='federated.07pwuvl146upwj0zl19eg07migyh' />
          </datasources>
          <datasource-dependencies datasource='federated.07pwuvl146upwj0zl19eg07migyh'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07pwuvl146upwj0zl19eg07migyh].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;North America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07pwuvl146upwj0zl19eg07migyh].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07pwuvl146upwj0zl19eg07migyh].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.07pwuvl146upwj0zl19eg07migyh].[tmn:date:qk]' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07pwuvl146upwj0zl19eg07migyh].[none:Location:nk]' />
              <text column='[federated.07pwuvl146upwj0zl19eg07migyh].[none:Location:nk]' />
              <color column='[federated.07pwuvl146upwj0zl19eg07migyh].[none:Forecast Indicator:nk]' />
              <text column='[federated.07pwuvl146upwj0zl19eg07migyh].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07pwuvl146upwj0zl19eg07migyh].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.07pwuvl146upwj0zl19eg07migyh].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='2' model-type='custom' range-type='auto' season-type='ets-none' show-prediction-bands='true' trend-type='ets-none' />
      </table>
      <simple-id uuid='{9AFA2B26-9CC5-4F8C-B4BD-EEDD1469BD67}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97774' id='8' param='horz' type-v2='layout-flow' w='98770' x='615' y='1113'>
            <zone h='97774' id='6' type-v2='layout-basic' w='89700' x='615' y='1113'>
              <zone h='11539' id='3' name='Sheet 1' w='89700' x='615' y='1113'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53609' id='5' name='Sheet 2' w='47534' x='42781' y='45278'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53609' id='10' name='Sheet 3' w='42166' x='615' y='45278'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27905' id='12' name='Sheet 4' w='89700' x='615' y='12652'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4721' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]' type-v2='color' w='47534' x='42781' y='40557'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='180' h='4721' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='1' param='[federated.117jsul1lr14oo1b0jsz60xz6d99].[sum:PercentPopulationInfected:qk]' type-v2='color' w='42166' x='615' y='40557'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='118' h='97774' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9070' x='90315' y='1113'>
              <zone fixed-size='266' h='38109' id='13' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.07pwuvl146upwj0zl19eg07migyh].[none:Location:nk]&#10;[federated.07pwuvl146upwj0zl19eg07migyh].[none:Forecast Indicator:nk]' type-v2='color' w='9070' x='90315' y='1113'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97774' id='14' param='vert' type-v2='layout-flow' w='98770' x='615' y='1113'>
                <zone fixed-size='84' h='11539' id='3' is-fixed='true' name='Sheet 1' w='89700' x='615' y='1113'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='215' h='27905' id='12' is-fixed='true' name='Sheet 4' w='89700' x='615' y='12652'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='38109' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.07pwuvl146upwj0zl19eg07migyh].[none:Location:nk]&#10;[federated.07pwuvl146upwj0zl19eg07migyh].[none:Forecast Indicator:nk]' type-v2='color' w='9070' x='90315' y='1113'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53609' id='10' is-fixed='true' name='Sheet 3' w='42166' x='615' y='45278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='180' h='4721' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.117jsul1lr14oo1b0jsz60xz6d99].[sum:PercentPopulationInfected:qk]' type-v2='color' w='42166' x='615' y='40557'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53609' id='5' is-fixed='true' name='Sheet 2' w='47534' x='42781' y='45278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4721' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]' type-v2='color' w='47534' x='42781' y='40557'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DB0F6256-0C85-40BE-A745-D96A7376B16A}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B0CA39BE-0822-4DCC-A9FA-B6223417563C}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02fhgjh0l4r35v0zv4o2b0rb9p7i].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{35C69ED0-3332-4D98-95B8-8316CFAF37D4}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='280'>
            <card pane-specification-id='1' param='[federated.117jsul1lr14oo1b0jsz60xz6d99].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{448197FB-C855-430B-9B5D-48BFF47528C2}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.07pwuvl146upwj0zl19eg07migyh].[none:Location:nk]&#10;[federated.07pwuvl146upwj0zl19eg07migyh].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3C9591B8-7016-4663-AC6B-A4FCD5C261B6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1B6DA4F8-1EA7-48ED-A39D-C07D98550813}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXxV9Z34/9c5d99ys5IASSBhExANAqIgilq1rVar305nbKfLtNrqaK3a
      1c641PqbOu30W5da6zi/1qp1GaxFwaqAiuyQEPawBAghISF77n7v2T7fP264EJYAYSef5+OR
      R5J7lvs55577fp/P55zz+ShCCIEkSZI04KhnugCSJEnSmSETgCRJ0gAlE4AkSdIAJROAJEnS
      ACUTgCRJ0gAlE4AkSdIAJROAJEnSACUTgCRJ0gAlE4AkSdIAJROAJEnSACUTgCRJ0gAlE4Ak
      SdIAddQEkEql+PTTT3n11Vd5//336erqQgiBpmk888wzHK0vuWeeeQbDMI65QFVVVXzyySe9
      XkskEsybN4/u7u7Ma9FolI0bNx7zevsyZ84camtrT8q6JEmSzhV9JoB4PM59991HZWUlQ4YM
      ob29naeeegoAy7LYunXrUd9g27ZtWJZ1zAXq7OyktbW112uhUIhf/epX/M///E8m4bS2tvL2
      228f83r70tTURCgUOinrkiRJOlfY+5r42muvMWXKFL797W+jKAoAQojM3wfq7Oxk8eLFBAIB
      pk2bhtvtzkzbsWMHtbW1jB49mjFjxqAoColEgvXr19Pd3c2YMWMYPnx4nwW95JJL2L59O42N
      jZSUlPSaFgqFSKVSDBo0CIDdu3czaNAgVFWlubmZaDTK9u3bufjiiwkGg6xYsQK/38/06dNR
      1XQODIfDvP/++/j9fi677DIcDgcADQ0NVFZWUlJSwuTJk1EUhebmZgKBAIZhsG3bNiZNmoSm
      aVRWVmIYBhMmTKCgoOAou16SJOnMOmINQAjBsmXL+NKXvtQr4B8u+Le0tPDggw+i6zo7d+7k
      Rz/6EalUCoD29nZmz56Nqqr89re/Zf78+QC8+uqrrFu3jng8zhNPPEFlZWWfBbXZbHznO9/h
      hRdeOKTZacOGDXzwwQeZ/1955RWampro6urizjvv5MMPP0QIwYMPPsh//Md/kEqleOedd3o1
      Nb322mvous7KlSt59NFHsSyLLVu28MQTT+D3+1mwYAEvvfQSQgjmzJnDnDlzuO+++1i3bh2m
      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
      3naiZ+f4Zz52TYwv57hxx09rZPyRHfYo+caTe2yZjPfsI/4Y7z2O99zD1wyz1e8ALmYmrAII
      BPzHNSAVFZUzRAKNZsJ+TnTRM2EVgIqKispE5+JcbFNRUVFR+dqoCkBFRUVlgqIqABUVFZUJ
      iqoAVFRUVCYoqgJQUVFRmaCoCkBFRUVlgqIqABUVFZUJiqoAVFRUVCYoqgJQUVFRmaCoCkBF
      RUVlgqIqABUVFZUJiqoAThO/33/ReBPzeDy43e5vJC8hxDk5M11F5ZvmfLRxv99/UjeY55qT
      HuNXXFxMSUkJABEREcyfP5+EhIRv3KvW0BnnYtxzwru7u3njjTeAIZd006ZNIz8//6yfKf7Y
      Y4/xz//8z8GzzcdDUZSgJ6Jhnn/+eW699dZRXn6+CuvWrWPlypWnLPv33nuP9957j7S0NH75
      y1+edvrDZTxW/lPR29vLn//8Z/7t3/7ttO85U4QQtLS0sH79evr6+pgyZQrXXnvt1y7TsXkA
      qse4C5hdu3axZ8+e465/73vfIzIyctx7TtZ3jOWZZ57hxhtvJCEhIXjt4MGDfPbZZwBERUWx
      cOFCYmJivnI9GdtH/O1vfyM/Pz/oIOub5qSlUlJSgtlspqioCKvVyr333hv0vftN4na7g57J
      xtLb20tlZSWXXnopmZmZvP7667z88stnXYaenp5TaupHH32UhoaGUddSUlLOSqfyzjvvnNbo
      5K233uK//uu/zqjzh6GK+bOf/eyMRyOKotDb23tG95wpTU1N3HPPPeTm5nLTTTfhdrvPmk/U
      Yd5+++1z4v5P5eyRmJjIrFmzmDp1Kjt27GDWrFkUFRWd1HF7WVkZzzzzzGmlb7fbj5vNHjp0
      iMHBQQoKCpAkiZ/97Gfs3LnzKz/Dv/zLv9Df3x/8e2Bg4IQuK78JTnmQd0ZGBvn5+cCQS7bP
      PvuM9PR0Kisr+eijj4iOjmblypWEhIRQX1+PLMtIksS2bdtYvnw5RqOR3bt3U15eTlxcHMuW
      LUOr1fLpp58GHbZfccUVaDQaiouLiYiI4IsvvsDpdLJixQri4uJ4//33aWtr46233kKr1XLN
      NdeM8uEZFRUV9Ak6c+ZM7rrrLm677TYGBgZ44403cDgczJ8/n/z8fCRJYuvWrQgh2L17N6mp
      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
      bXuPdUYCb9YkmQLbCsH3Rd6/5c5dr/Pk3cXN37pd3eDgIH6/n7/+67/mu9/9Lvffv3y4cNM0
      uXz5MrquI6Xk0qVLfPTRRwwPDwMQCoX46KOP6OnpQUpJZ2cnx44dI5vNMjExQTqdxjAM+vv7
      b9nz3E6sqZBsjjuZ/3vh+aUQz6q85PkymUD1smUW31DyQPC1XCKOaZP3jAFFU5dv2At3IYSi
      LC/DlpLmi6+y8cobvFj9FVJVG4lWbSN46L9DOFfvwCQVlakdT2GmkvSG4YM2STBPzH4zMV1W
      c53DAv+x8hTf9B3hf5Y/onrw/SX7T3aeRo50kxFW0rNOdsv6KAOSbDqDOTF4Q22/HVAKK1D9
      JVxMqEjg45K9CJtj2fJFR19j29QwWjbNKe9ODAnDSYUuRwOp5vvQC6vQggOYqTjrOo9CMoaQ
      UGuatI/JRd26Gjv8OaXu8ovEXG0zfij5pZUF166mrpvHDEN4q738X375ZVRVRdM0XC4Xv//9
      74nHl45+eurUKc6fP08mk0FKOWsJdPz4cXRd58iRI+zZs4eioiKCwSDDw8PU1dVx9OhR+vr6
      iMfjHD9+/JY+z+3E2mtJxEqDeGmE0xr/n+UZIqWbrutWUs9SJEPzjh2PlXNuwx/Pnl8L7byw
      L7YocE32U/P6/8XUyDAfrfsqRs1mZCKCUrN+5cTyy0AvrCK5+WFKXQptIwo9fcaKhP9WTF6J
      xGmVfMP6O3b1PI8SGcuJSWb6sKACUVjJptQ53LaVvJTnary/CbZMvIeZuDt3ASgKwuWl13Sj
      m7Bn8jxqdHLZ4j5FY1LVcLUdwXnqd5yKevgvTf8Lob3PzpbJIii1QrMdGuyCPhTC9TbcAY2T
      owoT08m9ViL+84m3wpyDoYDZ3/ORv++e+R5KCiIpyBrzFwbmlRKLaslvx41ANxX0hZ5ytwgl
      JSV8/PHHJJNJBgcHGRsbw25f2vt79+7dVFXldueKomCz2Th27Ngswc9kMhw7doyJiQmGhobY
      sGEDJSUlZDK5XeGZM7mwHTN13Ou44zqArAHPp+5jMjwFtiEoyjkerSr0s57Goc13nEoaKtLm
      RgiBGRpDONxgd66pDDpw8V1iwTF6t38ZIzSGVtaYq/8m7iGEQG3cxvhAe46rzHYgMJddAK4v
      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
    </thumbnail>
  </thumbnails>
</workbook>
